ensemble:
  name: "multi-agent-mcp-ensemble"
  version: "1.0.0"
  
  # AI Model Configuration
  ai_models:
    default_provider: "auto"  # auto, openai, anthropic, huggingface, local
    task_optimization: true   # Use optimal model for each task type
    fallback_enabled: true    # Fallback to other models if primary fails
    
    preferences:
      reasoning_tasks: "anthropic-claude-3-opus"
      code_generation: "openai-gpt-4"
      fast_response: "anthropic-claude-3-haiku"
      cost_sensitive: "huggingface-mistral-7b"
      general: "anthropic-claude-3-sonnet"
    
    provider_settings:
      openai:
        timeout: 30000
        max_retries: 3
        temperature: 0.7
      anthropic:
        timeout: 45000
        max_retries: 3
        temperature: 0.7
      huggingface:
        timeout: 60000
        max_retries: 2
        temperature: 0.8
      local:
        timeout: 15000
        max_retries: 1
        temperature: 0.7
  
  # Message Bus Configuration
  message_bus:
    type: "redis"
    host: "localhost"
    port: 6379
    channels:
      task_queue: "tasks"
      agent_discovery: "agent-discovery"
      agent_status: "agent-status"
      results: "results"
  
  # Agent Configuration
  agents:
    coordinator:
      replicas: 1
      type: "coordinator"
      resources:
        cpu: 2
        memory: "4Gi"
      capabilities: ["task-management", "orchestration", "result-synthesis"]
    
    specialists:
      - type: "code"
        replicas: 2
        capabilities: ["programming", "debugging", "refactoring", "code-review"]
        resources:
          cpu: 4
          memory: "8Gi"
      
      - type: "research"
        replicas: 2
        capabilities: ["information-gathering", "web-search", "documentation-analysis"]
        resources:
          cpu: 2
          memory: "4Gi"
      
      - type: "analysis"
        replicas: 1
        capabilities: ["data-analysis", "pattern-recognition", "reporting"]
        resources:
          cpu: 3
          memory: "6Gi"
      
      - type: "testing"
        replicas: 1
        capabilities: ["test-creation", "validation", "quality-assurance"]
        resources:
          cpu: 2
          memory: "4Gi"
      
      - type: "devops"
        replicas: 1
        capabilities: ["deployment", "monitoring", "infrastructure-management"]
        resources:
          cpu: 2
          memory: "4Gi"
    
    workers:
      - type: "file"
        replicas: 2
        capabilities: ["file-operations", "content-management"]
        resources:
          cpu: 1
          memory: "2Gi"
      
      - type: "database"
        replicas: 1
        capabilities: ["data-persistence", "queries", "migrations"]
        resources:
          cpu: 2
          memory: "4Gi"
      
      - type: "api"
        replicas: 2
        capabilities: ["external-integration", "http-requests"]
        resources:
          cpu: 1
          memory: "2Gi"
      
      - type: "security"
        replicas: 1
        capabilities: ["vulnerability-scanning", "compliance-checking"]
        resources:
          cpu: 2
          memory: "4Gi"
  
  # MCP Server Configuration
  mcp_servers:
    - id: "database-mcp"
      type: "database"
      endpoint: "postgresql://localhost:5432/ensemble_db"
      tools: ["query", "migrate", "backup", "restore"]
      capabilities: ["sql-operations", "data-management"]
    
    - id: "git-mcp"
      type: "git"
      endpoint: "github://api.github.com"
      tools: ["clone", "commit", "push", "pr", "branch", "merge"]
      capabilities: ["version-control", "collaboration"]
    
    - id: "file-system-mcp"
      type: "filesystem"
      endpoint: "file:///"
      tools: ["read", "write", "delete", "copy", "move", "search"]
      capabilities: ["file-management", "content-operations"]
    
    - id: "web-api-mcp"
      type: "web-api"
      endpoint: "https://api.example.com"
      tools: ["http-get", "http-post", "http-put", "http-delete"]
      capabilities: ["external-api", "data-fetching"]
    
    - id: "testing-mcp"
      type: "testing"
      endpoint: "local://testing-framework"
      tools: ["unit-test", "integration-test", "coverage-report"]
      capabilities: ["test-execution", "quality-validation"]
    
    - id: "security-mcp"
      type: "security"
      endpoint: "local://security-scanner"
      tools: ["vulnerability-scan", "compliance-check", "secret-detection"]
      capabilities: ["security-analysis", "risk-assessment"]
  
  # Monitoring Configuration
  monitoring:
    metrics_port: 9090
    health_check_interval: 30000
    log_level: "info"
    enable_tracing: true
  
  # Security Configuration
  security:
    enable_tls: true
    jwt_secret: "${JWT_SECRET}"
    agent_auth_required: true
    mcp_auth_required: true